{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample todo app.",
        "title": "Todo App API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/access": {
            "post": {
                "security": [
                    {
                        "RefreshTokenAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет токен доступа с использованием токена обновления",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление токена доступа",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TokenAccessRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Выполняет вход пользователя и возвращает токены доступа и обновления",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TokensRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Регистрирует нового пользователя и возвращает токены доступа и обновления",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserRegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TokensRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            }
        },
        "/todo": {
            "post": {
                "security": [
                    {
                        "AccessTokenAuth": []
                    }
                ],
                "description": "Создать новую задачу для текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Создать задачу",
                "parameters": [
                    {
                        "description": "Данные для создания задачи",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TodoCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TodoCreateRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AccessTokenAuth": []
                    }
                ],
                "description": "Обновляет задачу по ID для текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Обновить задачу",
                "parameters": [
                    {
                        "description": "Данные для обновления задачи",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TodoUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TodoUpdateRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            }
        },
        "/todo/{id}": {
            "get": {
                "security": [
                    {
                        "AccessTokenAuth": []
                    }
                ],
                "description": "Получить задачу для текущего пользователя по id задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Получить задачу",
                "parameters": [
                    {
                        "description": "Данные для создания задачи",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TodoCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TodoCreateRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessTokenAuth": []
                    }
                ],
                "description": "Удаляет задачу по ID для текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Удалить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "security": [
                    {
                        "AccessTokenAuth": []
                    }
                ],
                "description": "Возвращает список задач для текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Получить список задач",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.TodoGetRes"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPErrorRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.TodoCreateReq": {
            "type": "object",
            "properties": {
                "completed": {
                    "description": "Статус выполнения задачи\nrequired: false\nexample: false",
                    "type": "boolean"
                },
                "description": {
                    "description": "Описание задачи\nrequired: true\nexample: Купить молоко в магазине на углу",
                    "type": "string"
                },
                "title": {
                    "description": "Название задачи\nrequired: true\nexample: Купить молоко",
                    "type": "string"
                }
            }
        },
        "entity.TodoCreateRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "entity.TodoGetRes": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.TodoUpdateReq": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.TodoUpdateRes": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.TokenAccessRes": {
            "type": "object",
            "properties": {
                "access": {
                    "description": "Токен доступа\nexample: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                }
            }
        },
        "entity.TokensRes": {
            "type": "object",
            "properties": {
                "access": {
                    "description": "Токен доступа\nexample: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                },
                "refresh": {
                    "description": "Токен обновления\nexample: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                }
            }
        },
        "entity.UserLoginReq": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email пользователя\nrequired: true\nexample: user@example.com",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль пользователя\nrequired: true\nexample: password123",
                    "type": "string"
                }
            }
        },
        "entity.UserRegisterReq": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email пользователя\nrequired: true\nexample: user@example.com",
                    "type": "string"
                },
                "name": {
                    "description": "Имя пользователя\nrequired: true\nexample: JohnDoe",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль пользователя\nrequired: true\nexample: password123",
                    "type": "string"
                }
            }
        },
        "handlers.HTTPErrorRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccessTokenAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "RefreshTokenAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}